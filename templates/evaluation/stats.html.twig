{% extends 'base.html.twig' %}

{% block titrePage %}Consulter les statistiques pour {{evaluation.nom}} {% endblock %}

{% block evaluations %}active{% endblock %}

{% block show %}show{% endblock %}

{% block mesEvaluations %}{% if evaluation.enseignant == app.user %}active{% endif %}{% endblock %}
{% block autresEvaluations %}{% if evaluation.enseignant != app.user %}active{% endif %}{% endblock %}

{% block collapsed %}{% endblock %}

{% block contenu %}

<table align="center" class="table">
  <tbody>
    <tr>
      <th class="intitule"><label for="evaluation_groupe" >Groupe évalué</label></th>
      <td >{{evaluation.groupe.nom}}</td>
    </tr>
    <tr>
      <th class="intitule"><label for="evaluation_date" >Date de l'évaluation</label></th>
      <td >{{evaluation.date}}</td>
    </tr>
    <tr>
      <th class="intitule"><label >Actions</label></th>
      <td>
        <a href="#"><i style="font-size: 25px;" data-toggle='tooltip' title="Exporter les statistiques au format PDF" class="icon-file-pdf"></i></a>
        {% if evaluation.enseignant.id == app.user.id or is_granted('ROLE_ADMIN') %}
        <a href="{{path("previsualisation_mail", {slug:evaluation.slug})}}"><i style="font-size: 25px;"  data-toggle='tooltip' title="Envoyer les statistiques aux étudiants"  class="icon-mail"></i></a>
        {% endif %}
      </td>
    </tr>
  </tbody>
</table>

{% for message in app.flashes('info') %}
<div class="alert alert-success" role="alert">
  {{ message }}
</div>
{% endfor %}

<div class='bouton' align=center>
  <span style="font-size:15px" class="badge badge-pill badge-primary"><i class="icon-attention-circled"></i> Les statistiques ne prennent pas en compte les étudiants démissionaires ou absents</span>
</div>
{% if groupes is not empty %}

{% for groupe in groupes %}

<br>
<div class="card">
  <ul class="list-group list-group-flush">
    <li class="list-group-item text-white" style="background-color:#bdc3c7;">
      {{groupe.nom}}
      {% set effectifTotal = 0 %}
      {% for effectif in groupe.notes %}
        {% set effectifTotal = effectifTotal + effectif %}
      {% endfor %}
      ({{ effectifTotal }} étudiants)
    </li>
    <li class="list-group-item">
      <h5 class="card-title">Réparition des notes</h5><br>
      <canvas align=center id="{{groupe.nom}}"></canvas>
    </li>
    <div align=center>
      <li class="list-group-item">
          <div class="card" style="width: 20em;">
            <ul class="list-group list-group-flush" style="text-align:left;">
              <li class="list-group-item">Statistiques {{groupe.nom}}</li>
              <li class="list-group-item">
                <ul>
                  <li>Moyenne : {{ groupe.moyenne }}</li>
                  <li>Écart-type : {{ groupe.ecartType }}</li>
                  <li>Note(s) minimale(s) : {{ groupe.minimum }}</li>
                  <li>Note(s) maximale(s) : {{ groupe.maximum }}</li>
                  <li>Médiane : {{ groupe.mediane }}</li>
                </ul>
              </li>
            </ul>
          </div>
      </li>
    </div>
  </ul>
</div>

{% endfor %}

{% else %}

<div class="info">
  <h2 class="h4 mb-0 text-gray-800">Veuillez sélectionner des groupes ou des statuts sur lesquels voir des statistiques </h2>
</div>

{% endif %}

{% endblock %}

{% block javascripts %}

<script type="text/javascript" src="{{asset("js/jspdf.min.js")}}"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>

<!-- Patie dédié au la génération du pdf -->
<script type="text/javascript">

  var sectionCapturer = document.querySelector("#pageContent");

  function genPDF(){
    var capture;
    html2canvas($("#pageContent"),{
      useCORS:true,
      onrendered:function(canvas){
        capture = canvas.toDataURL('image/png');

        var doc = new jsPDF('p','pt','a4');
        doc.addImage(capture,'PNG',10,10,600,600);
        doc.save('test.pdf');
      }
    })
  }

</script>

<script type="text/javascript">

{% for groupe in groupes%}


{% set maximumRepartition = max(groupe.notes)|json_encode() %}

{# si le maximum est égal à zéro (pas de notes pour le groupe) on définit une valeur maximale arbitraire de 5 pour y, sinon ce sera égal a la plus grande valeur du tableau de repartition #}
{% if maximumRepartition == 0 %}
{% set maximumRepartition = 5 %}
{% endif %}

var graph = document.getElementById('{{groupe.nom}}').getContext('2d');

var leBarre = new Chart(graph, {
  type: 'bar',
  data: {
    labels: ['[0;4[', '[4;8[', '[8;12[', '[12;16[', '[16;20]'],
    datasets: [{
      label: 'Effectif',
      data: {{groupe.notes|json_encode()}}, {# json_encode sert à rendre le tableau lisible en JavaScript #}
      backgroundColor: "#4e73df",
      hoverBackgroundColor: "#2e59d9",
      borderColor: "#4e73df"
    }]
  },
  options: {
    scales: {
      xAxes: [{
        gridLines: {
          display: false
        },
        ticks: {
          maxTicksLimit: 6
        },
        maxBarThickness: 100,
      }],
      yAxes: [{
        ticks: {
          beginAtZero: true,
          max: {{maximumRepartition}}
        }
      }]
    },
    aspectRatio: 3,
    maintainAspectRatio: true,
    responsive: true,
    legend: {
      display: false
    },
    tooltips: {
      titleMarginBottom: 10,
      titleFontColor: '#6e707e',
      titleFontSize: 14,
      backgroundColor: "rgb(255,255,255)",
      bodyFontColor: "#858796",
      borderColor: '#dddfeb',
      borderWidth: 1,
      xPadding: 15,
      yPadding: 15,
      displayColors: false,
      caretPadding: 10
    },
    plugins : {
      labels: {
        render: 'value'
      }
    }
  }
});

{% endfor %}
</script>
{% endblock %}
