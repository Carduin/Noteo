
{% extends 'base.html.twig' %}

{% block titrePage %}{{ titre }}{% endblock %}

{% block statistiques %}active{% endblock %}

{% block stylesheets %}
    <style>
        .card:hover{
            -webkit-box-shadow: -1px 9px 40px -12px rgba(0,0,0,0.75);
            -moz-box-shadow: -1px 9px 40px -12px rgba(0,0,0,0.75);
            box-shadow: -1px 9px 40px -12px rgba(0, 0, 0, 0.75);
        }
    </style>
{% endblock %}

{% block contenu %}

<div class="table-responsive">
    <table align="center" class="table">
        <tbody>
          <tr>
              <th>Évaluations Concernées</th>
              <td>
                  <ul>
                      {% for evaluation in evaluations %}
                          <li>{{ evaluation.nom }} ({{ evaluation.date|date("d/m/Y") }})</li>
                      {% endfor %}
                  </ul>
              </td>
          </tr>
          <tr>
          {% if stats.type == "groupe" %}
              <th>Groupes sélectionnés</th>
              <td>
                  <ul>
                      {% for groupe in groupes %}
                        <li>{{ groupe.nom }}</li>
                      {% endfor %}
                  </ul>
              </td>
          {% else %}
            <th>Groupe d'étudiants observé ayant un statut particulier</th>
            <td>
              {{ groupes[0].nom }}
            </td>
          {% endif %}
          </tr>
          <tr>
              <th class="intitule"><label >Actions</label></th>
              <td>
                  <a href="#"><i style="font-size: 25px;" data-toggle='tooltip' title="Exporter les statistiques au format PDF" class="icon-file-pdf" onclick=""></i></a>
              </td>
          </tr>
        </tbody>
    </table>
</div>
<div class='bouton' align=center>
    <span style="font-size:15px" class="badge badge-info"><i class="icon-attention-circled"></i>Les statistiques ne prennent pas en compte les étudiants démissionaires</span>
</div>

{% for i in 0..stats|length - 3 %}

{% set idGraph = "diagrammeEvolutionResultat" ~ stats[i].nom %}


<div class="card">
    <ul class="list-group list-group-flush">
        <li class="list-group-item text-white" style="background-color:#bdc3c7;">
          {{stats[i].nom}}
          {% for groupe in groupes %}
          {% endfor %}
        </li>
        <li class="list-group-item">
            <div>
                <br>
                <div class="container-fluid">
                    <span style="font-size:15px"><i class="icon-attention-circled"></i>Survolez le graphique pour plus d'informations, cliquez sur un label de la légende pour afficher / masquer les données</span>
                    <br/>
                    <br/>
                    <canvas id="{{idGraph}}"></canvas>
                </div>
            </div>
        </li>
    </ul>
</div>
<br>
{% endfor %}

{% endblock %}

{% block javascripts %}

<script type="text/javascript">
  // Liste de couleurs communes
  var noir = "#000000", jaune = "#FFFF00", bleu = "#0000FF", rouge = "#FF0000", vert = "#00FF00",
      violet = "#EE82EE", blanc = "#FFFFFF", gris = "#808080";
  // Pallette de couleurs (valeurs rgb)
  var couleurs = [
      [192, 57, 43], [155, 89, 182], [41, 128, 185], [22, 160, 133], [46, 204, 113], [243, 156, 18], [211, 84, 0], [189, 195, 199], [127, 140, 141],
      [44, 62, 80], [231, 76, 60], [142, 68, 173], [26, 188, 156], [39, 174, 96], [241, 196, 15], [230, 126, 34], [236, 240, 241], [149, 165, 166],
      [52, 73, 94],
  ];

  var optionsGraph = {
    scales: {
      xAxes: [{
        ticks: {
          {% if evaluations|length <= 5 %}
          display: true
          {% else %}
          display: false
          {% endif %}
        },
        display: true,
        scaleLabel: {
          display: true
        }
      }],
      yAxes: [{
        display: true,
        scaleLabel: {
          display: false,
          labelString: 'Value'
        },
        ticks: {
            suggestedMin: 0,
            suggestedMax: 20
        }
      }]
    },
    legend: {
    display: true
},
spanGaps: true
};

{% for i in 0..stats|length - 3 %}
{% for graphCourant in  1..stats[i] %}
{% set idGraph = "diagrammeEvolutionResultat" ~ stats[i].nom %}
{% set nbEtudiantsGroupeCourant = stats[i]["etudiants"]|length %}


fillTabOfColors({{nbEtudiantsGroupeCourant}});

var diagrammeEvolutionResultat = document.getElementById( "{{ idGraph }}" ).getContext('2d');
var myLineChart = new Chart(diagrammeEvolutionResultat, {
          type: 'line',
          data: {
              labels: [{% for evaluation in evaluations %} '{{evaluation.nom}}', {% endfor %}],
              datasets: [
                          {% for etudiant in stats[i]["etudiants"] %}
                            {
                    					label: '{{etudiant.nomPrenom}}',
                    					data: [{% for note in etudiant.notes %} {{note}}, {% endfor %}],
                    					borderColor: "rgb(" + couleurs[{{loop.index}}][0] + "," + couleurs[{{loop.index}}][1] + "," + couleurs[{{loop.index}}][2] + ")",
                    					backgroundColor: "rgb(" + couleurs[{{loop.index}}][0] + "," + couleurs[{{loop.index}}][1] + "," + couleurs[{{loop.index}}][2] + ")",
                    					fill: false,
                    					lineTension: 0
                    				},
                          {% endfor %}
                        ]
        				},
          options: optionsGraph,
      });

  function fillTabOfColors(nbLoop)
  {
    if (nbLoop > couleurs.length) {
        var gap = nbLoop - couleurs.length;
        for (var i = 0; i <= gap ; i++) {
            var coul = couleurs[i];
            couleurs.push([(coul[0] + 60) % 255, (coul[1] - 60) % 255, coul[2]]);
        }
    }
  }

{% endfor %}
{% endfor %}

</script>

{% endblock %}
