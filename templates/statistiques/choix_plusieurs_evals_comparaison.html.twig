{% extends 'base.html.twig' %}

{% block titrePage %}{{ titrePage }}{% endblock %}

{% block statistiques %}active{% endblock %}

{% block contenu %}
    <h1 class="h4 mb-0 text-gray-800">Selectionner les évaluations à comparer à l'évaluation de référence</h1> <br>
    {{ include('statistiques/_choix_evals_form.html.twig') }}
    {% if dispoEvals == true %}
      {{ include('statistiques/_choix_evals_form.html.twig') }}
    {% else %}
      <p> Aucune évaluation n'est comparable avec l'évaluation {{evaluation.nom}}. Vous pouvez créer des évaluations <a href="{{ path('evaluation_enseignant')}}">ici </a>
      où bien sélectionner une autre évaluation de référence à <a href='{{ path('statistiques_choix_evaluation', {'typeStat' : 'comparaison', 'typeGraph' : 'moyenne'}) }}'>l'étape précédente </a>.</p>
    {% endif %}
{% endblock %}

{% block datatables %}

    <script type="text/javascript">

        var table = $('#evaluations').DataTable({
            language: {
                // Suppression du label Rechercher et ajout du placeholder
                search: "_INPUT_",
                searchPlaceholder: "Rechercher...",
                "url": "{{asset('tradfr.json')}}"
            },
            order: [2, 'asc'],
            columns: [{"orderable": false}, null, null, {"orderable": false}, null],
            lengthMenu: [
                [15, 30, 45, -1],
                [15, 30, 45, "Tout"]
            ],
            pageLength : {{ app.user.preferenceNbElementsTableaux }}, <!-- Pour que le nombre d'éléments affichés par défaut soit celui de la préference de l'utilisateur -->
            info: false,
        });

        $("[name='form']").on('submit', function () {
            table.rows().nodes().page.len(-1).draw(); // Cette fonction permet, avant la soumission du formulaire, d'afficher dans le DOM toutes les lignes du tableau pour qu'aucune ne soit ignorée
        });
    </script>

{% endblock %}

{% block javascripts %}
    <script>
        window.onload = function() {
            $("#valider").attr('disabled', true)
            checkCasesCocheesPage()
        }

        $("[name='checkbox']").on('click', function () {
            checkCasesCocheesPage()
        })
        //Event listerner pour déclencher le check à chaque case cochée
        $("[name='form[evaluations][]']").on('click', function () {
            checkCasesCocheesPage()
        })

        function checkCasesCocheesPage() {
            evalCheck = false; //Au moins une évaluation coché
            $("#valider").attr('disabled', true)
            $("[name='form[evaluations][]']").each( function () {
                if (this.checked) {
                    evalCheck = true;
                    return false; //Equivalent d'un break, car un seul coché suffit
                }
            })
            if(evalCheck) { //Si une une évaluation cochée
                $("#valider").attr('disabled', false)
            }
        }
    </script>
{% endblock %}
