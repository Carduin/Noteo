{% extends 'base.html.twig' %}

{% block titrePage %}{% trans %}index_titre_page{% endtrans %}{% endblock %}

{% block groupes %}active{% endblock %}

{% block contenu %}
    {% if groupes is not empty %} {# On teste si la chaine représentant l'arbre n'est pas vide : si oui cela veut dire qu'il n'y a aucun groupe #}
        <div class='bouton' align=center>
            <a class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm" href="#"
               onclick="onReorderTableByHierarchie()">{% trans %}index_label_btn_ordre_hierarchique{% endtrans %}</a>
        </div>
        <div class="table-responsive table-hover">
            <table class="table" id="table">
                <thead>
                <tr>
                    <th>Nom</th>
                    <th>Effectif</th>
                    <th>Description</th>
                    <th>Créateur</th>
                    <th>Évaluable <a href="#HelpEvaluable" data-toggle='modal' data-target='#HelpEvaluable'><i
                                    class="icon-help-circled"></i></a></th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                {% for groupe in groupes %}
                    <tr>
                        <td>
                            {% if groupe.lvl > 0 %}
                                {% for i in 1.. groupe.lvl %}
                                    &emsp; <!-- Ajout d'un espace (&nbsp) -->
                                {% endfor %}
                            {% endif %}
                            {{ groupe.nom }}
                        </td>
                        <td>{{ groupe.etudiants|length }}</td>
                        <td>{{ groupe.description }}</td>
                        <td>{{ groupe.enseignant.prenom }} {{ groupe.enseignant.nom }}</td>
                        <td>{{ groupe.estEvaluable ? 'Oui' : 'Non' }}</td>
                        <td>
                            <a href='{{ path("groupe_etudiant_show", {slug : groupe.slug}) }}'><i class='icon-eye'
                                                                                                  data-toggle='tooltip'
                                                                                                  title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_consulter{% endtrans %}'></i></a>
                            <a {% if groupe.estEvaluable %}href='{{ path("evaluation_new", {slug : groupe.slug}) }}' {% endif %}><i
                                        class='icon-eval-simple' data-toggle='tooltip'
                                        title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_eval{% endtrans %}'></i></a>
                            <a {% if groupe.estEvaluable %} href='{{ path('evaluation_avec_parties_new', {slug: groupe.slug}) }}' {% endif %}><i
                                        class='icon-eval-composee' data-toggle='tooltip'
                                        title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_eval_parties{% endtrans %}'></i></a>
                            <a {% if is_granted('ROLE_ADMIN') %} href='{{ path("groupe_etudiant_new_sousGroupe", {slug : groupe.slug}) }}' {% endif %}><i
                                        class='icon-plus' data-toggle='tooltip'
                                        title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_creer{% endtrans %}'></i></a>
                            <a {% if is_granted('ROLE_ADMIN') %} href="{{ path("groupe_etudiant_edit", {slug:groupe.slug}) }}" {% endif %}><i
                                        class='icon-pencil-1' data-toggle='tooltip'
                                        title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_modifier{% endtrans %}'></i></a>
                            <a {% if is_granted('ROLE_ADMIN') %} href='{{ path ("groupe_etudiant_delete", {slug:groupe.slug}) }}' onclick='EcritureModale("{{ path ("groupe_etudiant_delete", {slug:groupe.slug}) }}")' data-toggle='modal' {% endif %}><i
                                        class='icon-trash' data-toggle='tooltip' title='{% trans with {'nom': groupe.nom } %}tooltip_groupe_supprimer{% endtrans %}'></i></a>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    {% else %}
        <div class="info">
            <h1 class="h4 mb-0 text-gray-800">Vous n'avez aucun groupe d'étudiants</h1>
        </div>
        <div class='bouton' align=center>
            <a href="{{ path('groupe_etudiant_new') }}" class="d-sm-inline-block btn btn-sm btn-primary shadow-sm">Importer
                un groupe d'étudiants</a>
        </div>
    {% endif %}
    <div class="modal fade" id="delGroupe" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Avertissement</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div class="modal-body">
                    Êtes-vous sur de vouloir supprimer le groupe ? <br>
                    Cette action supprimera :
                    <ul>
                        <li>Tous ses sous-groupes</li>
                        <li>Toutes les évaluations associées</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <a class="d-sm-inline-block btn btn-sm btn-primary shadow-sm" id="BoutonSupprimerModale" href="#">Supprimer
                        le groupe</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Modale du ? de évaluable -->
    <div class="modal fade" id="HelpEvaluable" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Aide</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div align=center class="modal-body">
                    Cet attribut d'un groupe détermine si vous pourrez, ou non, créer des évaluations pour celui-ci.
                </div>
                <div class="modal-footer">
                    <button class="d-sm-inline-block btn btn-sm btn-primary shadow-sm" type="button"
                            data-dismiss="modal">Ok
                    </button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        /* Cette fonction est utilisée pour adapter le href du bouton de confirmation de la suppression
      d'un groupe dans la fenetre modale, afin de s'adapter au groupe que l'on veut supprimer */
        function EcritureModale(url) {
            $("#delGroupe").modal(); //On fait apparaitre la fenêtre modale
            document.getElementById("BoutonSupprimerModale").href = url; //On réécrit le href du bouton de suppression avec l'url correspondante au groupe dont on a cliqué sur la corbeille
        }
    </script>
{% endblock %}

{% block datatables %}
    <script type="text/javascript">
        var table = $('#table').dataTable({
            aaSorting: [], // Pour désactiver le tri automatique pour pouvoir avoir la décomposition que l'on veut
            language: {
                // Suppression du label Rechercher et ajout du placeholder
                search: "_INPUT_",
                searchPlaceholder: "{% trans %}rechercher{% endtrans %}",
                oPaginate: {
                    sFirst:      "{% trans %}premier{% endtrans %}",
                    sPrevious:   "{% trans %}precedent{% endtrans %}",
                    sNext:       "{% trans %}suivant{% endtrans %}",
                    sLast:       "{% trans %}dernier{% endtrans %}"
                },
                sProcessing:     "{% trans %}traitement{% endtrans %}",
                sLoadingRecords: "{% trans %}chargement{% endtrans %}",
                sZeroRecords:    "{% trans %}aucune_correspondance{% endtrans %}",
                sEmptyTable:     "{% trans %}table_vide{% endtrans %}",
                sLengthMenu:     "{% trans %}afficher_x_elements{% endtrans %}"
            },
            columns: [null, null, {
                "orderable": false
            }, null, null, {
                "orderable": false
            }],
            lengthMenu: [
                [15, 30, 45, -1],
                [15, 30, 45, "Tout"]
            ],
            pageLength: {{ app.user.preferenceNbElementsTableaux }}, <!-- Pour que le nombre d'éléments affichés par défaut soit celui de la préference de l'utilisateur -->
            info: false,
        });

        function onReorderTableByHierarchie() {
            table.fnSortNeutral(); //Cette fonction (importée d'un plugin) permet de réaorganiser la table html telle que quand les données sont arrivées. Dans ce cas, cela sert à afficher à nouveau
                                   // les groupes hierarchiquement car les données arrivent à la page triées hierarchiquement lors du chargement
        }
    </script>
{% endblock %}
